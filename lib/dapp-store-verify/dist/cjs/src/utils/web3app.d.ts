export default App;
declare namespace App {
    const web3Provider: null;
    const contracts: {};
    const web3: null;
    const account: number;
    const toBN: (value: string | number) => import("web3-utils/node_modules/@types/bn.js");
    function init(): Promise<{
        web3Provider: null;
        contracts: {};
        web3: null;
        account: number;
        toBN: (value: string | number) => import("web3-utils/node_modules/@types/bn.js");
        init: () => Promise<any | null>;
        initWeb3: () => Promise<any | null>;
        initContract: () => Promise<any>;
        getAccount: () => Promise<number>;
        useMetaMask: () => boolean;
        sell: (tokenURI: any, amount: any) => Promise<any>;
        buy: (tokenId: any, amount: any) => Promise<any>;
        verify: (tokenId: any) => Promise<any>;
        totalCount: () => Promise<any>;
        tokenURI: (tokenId: any) => Promise<any>;
        tokenURIs: () => Promise<any[] | undefined>;
    } | null>;
    function initWeb3(): Promise<{
        web3Provider: null;
        contracts: {};
        web3: null;
        account: number;
        toBN: (value: string | number) => import("web3-utils/node_modules/@types/bn.js");
        init: () => Promise<any | null>;
        initWeb3: () => Promise<any | null>;
        initContract: () => Promise<any>;
        getAccount: () => Promise<number>;
        useMetaMask: () => boolean;
        sell: (tokenURI: any, amount: any) => Promise<any>;
        buy: (tokenId: any, amount: any) => Promise<any>;
        verify: (tokenId: any) => Promise<any>;
        totalCount: () => Promise<any>;
        tokenURI: (tokenId: any) => Promise<any>;
        tokenURIs: () => Promise<any[] | undefined>;
    } | null>;
    function initContract(): Promise<{
        web3Provider: null;
        contracts: {};
        web3: null;
        account: number;
        toBN: (value: string | number) => import("web3-utils/node_modules/@types/bn.js");
        init: () => Promise<any | null>;
        initWeb3: () => Promise<any | null>;
        initContract: () => Promise<any>;
        getAccount: () => Promise<number>;
        useMetaMask: () => boolean;
        sell: (tokenURI: any, amount: any) => Promise<any>;
        buy: (tokenId: any, amount: any) => Promise<any>;
        verify: (tokenId: any) => Promise<any>;
        totalCount: () => Promise<any>;
        tokenURI: (tokenId: any) => Promise<any>;
        tokenURIs: () => Promise<any[] | undefined>;
    }>;
    function getAccount(): Promise<number>;
    function useMetaMask(): boolean;
    function sell(tokenURI: any, amount: any): Promise<any>;
    function buy(tokenId: any, amount: any): Promise<any>;
    function verify(tokenId: any): Promise<any>;
    function totalCount(): Promise<any>;
    function tokenURI(tokenId: any): Promise<any>;
    function tokenURIs(): Promise<any[] | undefined>;
}
